<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.MerchantMapper">
  <resultMap id="BaseResultMap" type="com.example.model.entity.Merchant">
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="merchant_name" jdbcType="VARCHAR" property="merchantName" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="business_license_number" jdbcType="VARCHAR" property="businessLicenseNumber" />
    <result column="registration_date" jdbcType="DATE" property="registrationDate" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.model.entity.Merchant">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    merchant_id, user_id, role_id, merchant_name, contact, address, email, business_license_number, 
    registration_date, avatar
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.model.entity.MerchantExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from merchants
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.model.entity.MerchantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from merchants
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.model.entity.MerchantExample">
    delete from merchants
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.model.entity.Merchant">
    insert into merchants (merchant_id, user_id, role_id, 
      merchant_name, contact, address, 
      email, business_license_number, registration_date, 
      avatar, introduction)
    values (#{merchantId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{merchantName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{businessLicenseNumber,jdbcType=VARCHAR}, #{registrationDate,jdbcType=DATE}, 
      #{avatar,jdbcType=VARCHAR}, #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.entity.Merchant">
    insert into merchants
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="merchantName != null">
        merchant_name,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="businessLicenseNumber != null">
        business_license_number,
      </if>
      <if test="registrationDate != null">
        registration_date,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="merchantName != null">
        #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseNumber != null">
        #{businessLicenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="registrationDate != null">
        #{registrationDate,jdbcType=DATE},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.model.entity.MerchantExample" resultType="java.lang.Long">
    select count(*) from merchants
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update merchants
    <set>
      <if test="row.merchantId != null">
        merchant_id = #{row.merchantId,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.roleId != null">
        role_id = #{row.roleId,jdbcType=INTEGER},
      </if>
      <if test="row.merchantName != null">
        merchant_name = #{row.merchantName,jdbcType=VARCHAR},
      </if>
      <if test="row.contact != null">
        contact = #{row.contact,jdbcType=VARCHAR},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.businessLicenseNumber != null">
        business_license_number = #{row.businessLicenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.registrationDate != null">
        registration_date = #{row.registrationDate,jdbcType=DATE},
      </if>
      <if test="row.avatar != null">
        avatar = #{row.avatar,jdbcType=VARCHAR},
      </if>
      <if test="row.introduction != null">
        introduction = #{row.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update merchants
    set merchant_id = #{row.merchantId,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      role_id = #{row.roleId,jdbcType=INTEGER},
      merchant_name = #{row.merchantName,jdbcType=VARCHAR},
      contact = #{row.contact,jdbcType=VARCHAR},
      address = #{row.address,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      business_license_number = #{row.businessLicenseNumber,jdbcType=VARCHAR},
      registration_date = #{row.registrationDate,jdbcType=DATE},
      avatar = #{row.avatar,jdbcType=VARCHAR},
      introduction = #{row.introduction,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update merchants
    set merchant_id = #{row.merchantId,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      role_id = #{row.roleId,jdbcType=INTEGER},
      merchant_name = #{row.merchantName,jdbcType=VARCHAR},
      contact = #{row.contact,jdbcType=VARCHAR},
      address = #{row.address,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      business_license_number = #{row.businessLicenseNumber,jdbcType=VARCHAR},
      registration_date = #{row.registrationDate,jdbcType=DATE},
      avatar = #{row.avatar,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>